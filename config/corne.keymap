/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    &vbatt {
      compatible = "zmk, battery-voltage-divider";
      io-channels = <&adc 2>;
      output-ohms =<2000000>;
      full-ohms = <(2000000 + 806000)>;
    };

    behaviors {
        tpmt: tpmt {
            compatible = "zmk,behavior-hold-tap";
            label = "TPMT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <125>;
            quick-tap-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q          &kp W             &kp E             &kp R               &kp T    &kp Y      &kp U                &kp I              &kp O              &kp P             &kp BACKSLASH
&kp BACKSPACE  &tpmt LCTRL A  &tpmt LEFT_ALT S  &tpmt LEFT_GUI D  &tpmt LEFT_SHIFT F  &kp G    &kp H      &tpmt RIGHT_SHIFT J  &tpmt RIGHT_GUI K  &tpmt RIGHT_ALT L  &tpmt RCTRL SEMI  &kp SQT
&kp LSHFT      &kp Z          &kp X             &kp C             &kp V               &kp B    &kp N      &kp M                &kp COMMA          &kp DOT            &kp FSLH          &kp RIGHT_SHIFT
                                                &mo 2             &kp RETURN          &mo 1    &kp SPACE  &kp DELETE           &mo 1
            >;

            label = "DEFAULT";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp GRAVE  &trans  &trans  &kp PRINTSCREEN  &trans    &kp INS     &kp HOME        &kp UP_ARROW      &kp END            &kp PG_UP  &trans
&trans      &trans     &trans  &trans  &trans           &trans    &kp DELETE  &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT          &kp PG_DN  &kp RGUI
&trans      &trans     &trans  &trans  &trans           &trans    &kp MINUS   &kp EQUAL       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans     &trans
                               &trans  &trans           &trans    &trans      &trans          &trans
            >;

            label = "NAV";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7      &kp N8  &kp N9  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4      &kp N5  &kp N6  &kp KP_PLUS  &kp KP_EQUAL
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1      &kp N2  &kp N3  &kp SLASH    &trans
                        &trans  &trans  &trans    &kp N0  &kp KP_DOT  &trans
            >;

            label = "NUM";
        };

        sys_layer {
            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp CAPSLOCK  &kp KP_NUMLOCK  &kp SCROLLLOCK  &trans   &studio_unlock  &out OUT_TOG
&bootloader  &trans        &trans        &trans        &trans        &trans          &trans        &trans          &trans          &trans   &trans          &bootloader
&kp F1       &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7        &kp F8          &kp F9          &kp F10  &kp F11         &kp F12
                                         &trans        &trans        &trans          &trans        &trans          &trans
            >;

            label = "Fn";
        };

        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };

    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjustment_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
